// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MinhaApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250315162217_create_tables")]
    partial class create_tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MinhaApi.Apartment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("blocoid")
                        .HasColumnType("integer")
                        .HasColumnName("bloco_id");

                    b.Property<int>("number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.HasKey("id");

                    b.HasIndex("blocoid");

                    b.ToTable("apartament");
                });

            modelBuilder.Entity("MinhaApi.Bloco", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("bloco");
                });

            modelBuilder.Entity("MinhaApi.Color", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("id");

                    b.ToTable("color", "vehicle");
                });

            modelBuilder.Entity("MinhaApi.Mark", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("id");

                    b.ToTable("mark", "vehicle");
                });

            modelBuilder.Entity("MinhaApi.Model", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("id");

                    b.ToTable("model", "vehicle");
                });

            modelBuilder.Entity("MinhaApi.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<int>("apartmentid")
                        .HasColumnType("integer")
                        .HasColumnName("apartment_id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("typeid")
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    b.HasKey("id");

                    b.HasIndex("apartmentid");

                    b.HasIndex("typeid");

                    b.ToTable("user", "user");
                });

            modelBuilder.Entity("Type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.HasKey("id");

                    b.ToTable("type", "vehicle");
                });

            modelBuilder.Entity("TypeUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.HasKey("id");

                    b.ToTable("type_user", "user");
                });

            modelBuilder.Entity("Vehicle", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("Userid")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("colorid")
                        .HasColumnType("integer")
                        .HasColumnName("color_id");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("markid")
                        .HasColumnType("integer")
                        .HasColumnName("mark_id");

                    b.Property<int>("modelid")
                        .HasColumnType("integer")
                        .HasColumnName("model_id");

                    b.Property<string>("plate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("plate");

                    b.Property<int>("typeid")
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.HasIndex("colorid");

                    b.HasIndex("markid");

                    b.HasIndex("modelid");

                    b.HasIndex("typeid");

                    b.ToTable("vehicle", "vehicle");
                });

            modelBuilder.Entity("MinhaApi.Apartment", b =>
                {
                    b.HasOne("MinhaApi.Bloco", "bloco")
                        .WithMany()
                        .HasForeignKey("blocoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bloco");
                });

            modelBuilder.Entity("MinhaApi.User", b =>
                {
                    b.HasOne("MinhaApi.Apartment", "apartment")
                        .WithMany()
                        .HasForeignKey("apartmentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TypeUser", "type")
                        .WithMany()
                        .HasForeignKey("typeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("apartment");

                    b.Navigation("type");
                });

            modelBuilder.Entity("Vehicle", b =>
                {
                    b.HasOne("MinhaApi.User", null)
                        .WithMany("vehicles")
                        .HasForeignKey("Userid");

                    b.HasOne("MinhaApi.Color", "color")
                        .WithMany()
                        .HasForeignKey("colorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinhaApi.Mark", "mark")
                        .WithMany()
                        .HasForeignKey("markid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinhaApi.Model", "model")
                        .WithMany()
                        .HasForeignKey("modelid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Type", "type")
                        .WithMany()
                        .HasForeignKey("typeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("color");

                    b.Navigation("mark");

                    b.Navigation("model");

                    b.Navigation("type");
                });

            modelBuilder.Entity("MinhaApi.User", b =>
                {
                    b.Navigation("vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
